#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1            &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6  &kp N7     &kp N8     &kp N9      &kp N0             &kp BACKSPACE
&kp TAB     &kp Q             &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y   &kp U      &kp I      &kp O       &kp P              &kp BSLH
&kp CAPS    &kp A             &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H   &kp J      &kp K      &kp L       &kp SEMI           &kp APOS
&kp LSHFT   &kp Z             &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N   &kp M      &kp COMMA  &kp DOT     &kp FSLH           &kp RET
&kp C_MUTE  &kp LEFT_BRACKET  &kp LEFT_ALT  &kp LEFT_GUI  &mo 1   &kp LCTRL    &kp ENTER        &mo 2   &kp SPACE  &kp LCTRL  &kp DELETE  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F11     &kp F1     &kp F2     &kp F3        &kp F4     &kp F5      &mmv MOVE_UP     &kp PRINTSCREEN  &tog 1           &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp MINUS  &trans
&kp TILDE   &kp GRAVE  &mkp LCLK  &kp UP_ARROW  &mkp RCLK  &mkp MB4    &mmv MOVE_DOWN   &kp INS          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS   &kp HOME
&trans      &mkp MCLK  &kp LEFT   &kp DOWN      &kp RIGHT  &mkp MB5    &mmv MOVE_LEFT   &kp PAGE_UP      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp RET    &kp END
&kp F12     &kp F6     &kp F7     &kp F8        &kp F9     &kp F10     &mmv MOVE_RIGHT  &kp PAGE_DOWN    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans     &trans
&kp C_MUTE  &trans     &trans     &trans        &trans     &trans      &mkp LCLK        &trans           &trans           &kp KP_NUMBER_0  &trans           &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &kp LC(T)     &kp LC(R)     &kp LC(E)     &kp LC(W)     &kp LC(Q)     &trans
&trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp LC(G)     &kp LC(F)     &kp LC(D)     &kp LC(S)     &kp LC(A)     &trans
&trans  &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &kp LC(B)     &kp LC(V)     &kp LC(C)     &kp LC(X)     &kp LC(Z)     &trans
&trans  &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans        &trans        &sys_reset    &soft_off     &bootloader
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
